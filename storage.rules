rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAgent() {
      return request.auth != null && request.auth.token.agent == true;
    }

    // Job description uploads
    match /jobs/{userId}/job-descriptions/{allPaths=**} {
      allow read: if true;  // Anyone can read job descriptions
      allow write: if isOwner(userId);  // Only owner can upload their job descriptions
    }

    // CV uploads
    match /users/{userId}/cv-uploads/{allPaths=**} {
      allow read: if isOwner(userId) || isAgent();  // Only owner and agents can read CVs
      allow write: if isOwner(userId);  // Only owner can upload their CV
    }

    // Keep existing rules for other paths
    match /videos/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
    
    match /users/{userId}/profile/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
    
    match /users/{userId}/application-videos/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
    
    match /pdfs-to-parse/{allPaths=**} {
      allow read, write, list: if request.auth != null;
    }

    match /cvs-to-parse/{allPaths=**} {
      allow read, write, list: if request.auth != null;
    }

    match /thumbnails/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(userId);
    }

    match /users/{userId}/cv/{fileName} {
      allow read: if isOwner(userId) || isAgent();
      allow write: if isOwner(userId);
    }

    match /application_recordings/{applicationId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if isAgent();
    }

    match /voiceovers/{audioFile} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /job_slides/{jobId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}